// <auto-generated/>
#pragma warning disable CS0618
using ArtifactsMmoDotNet.Api.Generated.Accounts;
using ArtifactsMmoDotNet.Api.Generated.Achievements;
using ArtifactsMmoDotNet.Api.Generated.Characters;
using ArtifactsMmoDotNet.Api.Generated.Events;
using ArtifactsMmoDotNet.Api.Generated.Ge;
using ArtifactsMmoDotNet.Api.Generated.Items;
using ArtifactsMmoDotNet.Api.Generated.Leaderboard;
using ArtifactsMmoDotNet.Api.Generated.Maps;
using ArtifactsMmoDotNet.Api.Generated.Models;
using ArtifactsMmoDotNet.Api.Generated.Monsters;
using ArtifactsMmoDotNet.Api.Generated.My;
using ArtifactsMmoDotNet.Api.Generated.Resources;
using ArtifactsMmoDotNet.Api.Generated.Token;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Json;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace ArtifactsMmoDotNet.Api.Generated
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class ArtifactsMmoApiClient : BaseRequestBuilder
    {
        /// <summary>The accounts property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Accounts.AccountsRequestBuilder Accounts
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Accounts.AccountsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The achievements property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Achievements.AchievementsRequestBuilder Achievements
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Achievements.AchievementsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The characters property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Characters.CharactersRequestBuilder Characters
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Characters.CharactersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The events property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Events.EventsRequestBuilder Events
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ge property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Ge.GeRequestBuilder Ge
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Ge.GeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The items property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Items.ItemsRequestBuilder Items
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Items.ItemsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The leaderboard property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Leaderboard.LeaderboardRequestBuilder Leaderboard
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Leaderboard.LeaderboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The maps property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Maps.MapsRequestBuilder Maps
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Maps.MapsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The monsters property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Monsters.MonstersRequestBuilder Monsters
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Monsters.MonstersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The my property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.My.MyRequestBuilder My
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.My.MyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The resources property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Resources.ResourcesRequestBuilder Resources
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Resources.ResourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The token property</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Token.TokenRequestBuilder Token
        {
            get => new global::ArtifactsMmoDotNet.Api.Generated.Token.TokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ArtifactsMmoDotNet.Api.Generated.ArtifactsMmoApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="backingStore">The backing store to use for the models.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ArtifactsMmoApiClient(IRequestAdapter requestAdapter, IBackingStoreFactory backingStore = default) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            RequestAdapter.EnableBackingStore(backingStore);
        }
        /// <summary>
        /// Return the status of the game server.
        /// </summary>
        /// <returns>A <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.StatusResponseSchema"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::ArtifactsMmoDotNet.Api.Generated.Models.StatusResponseSchema?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::ArtifactsMmoDotNet.Api.Generated.Models.StatusResponseSchema> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::ArtifactsMmoDotNet.Api.Generated.Models.StatusResponseSchema>(requestInfo, global::ArtifactsMmoDotNet.Api.Generated.Models.StatusResponseSchema.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Return the status of the game server.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
    }
}
#pragma warning restore CS0618
