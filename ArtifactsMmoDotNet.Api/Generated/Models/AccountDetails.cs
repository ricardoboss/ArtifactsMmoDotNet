// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArtifactsMmoDotNet.Api.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccountDetails : IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Achievement points.</summary>
        public int? AchievementsPoints
        {
            get { return BackingStore?.Get<int?>("achievements_points"); }
            set { BackingStore?.Set("achievements_points", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Account badges.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Badges
        {
            get { return BackingStore?.Get<UntypedNode?>("badges"); }
            set { BackingStore?.Set("badges", value); }
        }
#nullable restore
#else
        public UntypedNode Badges
        {
            get { return BackingStore?.Get<UntypedNode>("badges"); }
            set { BackingStore?.Set("badges", value); }
        }
#endif
        /// <summary>Banned.</summary>
        public bool? Banned
        {
            get { return BackingStore?.Get<bool?>("banned"); }
            set { BackingStore?.Set("banned", value); }
        }
        /// <summary>Ban reason.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BanReason
        {
            get { return BackingStore?.Get<string?>("ban_reason"); }
            set { BackingStore?.Set("ban_reason", value); }
        }
#nullable restore
#else
        public string BanReason
        {
            get { return BackingStore?.Get<string>("ban_reason"); }
            set { BackingStore?.Set("ban_reason", value); }
        }
#endif
        /// <summary>Member status.</summary>
        public bool? Member
        {
            get { return BackingStore?.Get<bool?>("member"); }
            set { BackingStore?.Set("member", value); }
        }
        /// <summary>Skins owned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Skins
        {
            get { return BackingStore?.Get<UntypedNode?>("skins"); }
            set { BackingStore?.Set("skins", value); }
        }
#nullable restore
#else
        public UntypedNode Skins
        {
            get { return BackingStore?.Get<UntypedNode>("skins"); }
            set { BackingStore?.Set("skins", value); }
        }
#endif
        /// <summary>Account status.</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Models.AccountStatus? Status
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.AccountStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>Username.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username
        {
            get { return BackingStore?.Get<string?>("username"); }
            set { BackingStore?.Set("username", value); }
        }
#nullable restore
#else
        public string Username
        {
            get { return BackingStore?.Get<string>("username"); }
            set { BackingStore?.Set("username", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.AccountDetails"/> and sets the default values.
        /// </summary>
        public AccountDetails()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.AccountDetails"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArtifactsMmoDotNet.Api.Generated.Models.AccountDetails CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArtifactsMmoDotNet.Api.Generated.Models.AccountDetails();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "achievements_points", n => { AchievementsPoints = n.GetIntValue(); } },
                { "badges", n => { Badges = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "ban_reason", n => { BanReason = n.GetStringValue(); } },
                { "banned", n => { Banned = n.GetBoolValue(); } },
                { "member", n => { Member = n.GetBoolValue(); } },
                { "skins", n => { Skins = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::ArtifactsMmoDotNet.Api.Generated.Models.AccountStatus>(); } },
                { "username", n => { Username = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("achievements_points", AchievementsPoints);
            writer.WriteObjectValue<UntypedNode>("badges", Badges);
            writer.WriteBoolValue("banned", Banned);
            writer.WriteStringValue("ban_reason", BanReason);
            writer.WriteBoolValue("member", Member);
            writer.WriteObjectValue<UntypedNode>("skins", Skins);
            writer.WriteEnumValue<global::ArtifactsMmoDotNet.Api.Generated.Models.AccountStatus>("status", Status);
            writer.WriteStringValue("username", Username);
        }
    }
}
#pragma warning restore CS0618
