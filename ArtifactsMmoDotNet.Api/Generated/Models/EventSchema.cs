// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArtifactsMmoDotNet.Api.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EventSchema : IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Code of the event. This is the event&apos;s unique identifier (ID).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Code
        {
            get { return BackingStore?.Get<string?>("code"); }
            set { BackingStore?.Set("code", value); }
        }
#nullable restore
#else
        public string Code
        {
            get { return BackingStore?.Get<string>("code"); }
            set { BackingStore?.Set("code", value); }
        }
#endif
        /// <summary>Content of the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema? Content
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema?>("content"); }
            set { BackingStore?.Set("content", value); }
        }
#nullable restore
#else
        public global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema Content
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema>("content"); }
            set { BackingStore?.Set("content", value); }
        }
#endif
        /// <summary>Duration in minutes.</summary>
        public int? Duration
        {
            get { return BackingStore?.Get<int?>("duration"); }
            set { BackingStore?.Set("duration", value); }
        }
        /// <summary>Map list of the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema>? Maps
        {
            get { return BackingStore?.Get<List<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema>?>("maps"); }
            set { BackingStore?.Set("maps", value); }
        }
#nullable restore
#else
        public List<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema> Maps
        {
            get { return BackingStore?.Get<List<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema>>("maps"); }
            set { BackingStore?.Set("maps", value); }
        }
#endif
        /// <summary>Name of the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>Rate spawn of the event. (1/rate every minute)</summary>
        public int? Rate
        {
            get { return BackingStore?.Get<int?>("rate"); }
            set { BackingStore?.Set("rate", value); }
        }
        /// <summary>Map skin of the event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Skin
        {
            get { return BackingStore?.Get<string?>("skin"); }
            set { BackingStore?.Set("skin", value); }
        }
#nullable restore
#else
        public string Skin
        {
            get { return BackingStore?.Get<string>("skin"); }
            set { BackingStore?.Set("skin", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.EventSchema"/> and sets the default values.
        /// </summary>
        public EventSchema()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.EventSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArtifactsMmoDotNet.Api.Generated.Models.EventSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArtifactsMmoDotNet.Api.Generated.Models.EventSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "code", n => { Code = n.GetStringValue(); } },
                { "content", n => { Content = n.GetObjectValue<global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema>(global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema.CreateFromDiscriminatorValue); } },
                { "duration", n => { Duration = n.GetIntValue(); } },
                { "maps", n => { Maps = n.GetCollectionOfObjectValues<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema>(global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "rate", n => { Rate = n.GetIntValue(); } },
                { "skin", n => { Skin = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("code", Code);
            writer.WriteObjectValue<global::ArtifactsMmoDotNet.Api.Generated.Models.EventContentSchema>("content", Content);
            writer.WriteIntValue("duration", Duration);
            writer.WriteCollectionOfObjectValues<global::ArtifactsMmoDotNet.Api.Generated.Models.EventMapSchema>("maps", Maps);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("rate", Rate);
            writer.WriteStringValue("skin", Skin);
        }
    }
}
#pragma warning restore CS0618
