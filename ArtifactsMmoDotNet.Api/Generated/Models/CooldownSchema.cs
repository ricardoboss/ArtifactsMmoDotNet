// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArtifactsMmoDotNet.Api.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CooldownSchema : IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The expiration of the cooldown.</summary>
        public DateTimeOffset? Expiration
        {
            get { return BackingStore?.Get<DateTimeOffset?>("expiration"); }
            set { BackingStore?.Set("expiration", value); }
        }
        /// <summary>The reason of the cooldown.</summary>
        public global::ArtifactsMmoDotNet.Api.Generated.Models.ActionType? Reason
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.ActionType?>("reason"); }
            set { BackingStore?.Set("reason", value); }
        }
        /// <summary>The remaining seconds of the cooldown.</summary>
        public int? RemainingSeconds
        {
            get { return BackingStore?.Get<int?>("remaining_seconds"); }
            set { BackingStore?.Set("remaining_seconds", value); }
        }
        /// <summary>The start of the cooldown.</summary>
        public DateTimeOffset? StartedAt
        {
            get { return BackingStore?.Get<DateTimeOffset?>("started_at"); }
            set { BackingStore?.Set("started_at", value); }
        }
        /// <summary>The total seconds of the cooldown.</summary>
        public int? TotalSeconds
        {
            get { return BackingStore?.Get<int?>("total_seconds"); }
            set { BackingStore?.Set("total_seconds", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.CooldownSchema"/> and sets the default values.
        /// </summary>
        public CooldownSchema()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.CooldownSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArtifactsMmoDotNet.Api.Generated.Models.CooldownSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArtifactsMmoDotNet.Api.Generated.Models.CooldownSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "expiration", n => { Expiration = n.GetDateTimeOffsetValue(); } },
                { "reason", n => { Reason = n.GetEnumValue<global::ArtifactsMmoDotNet.Api.Generated.Models.ActionType>(); } },
                { "remaining_seconds", n => { RemainingSeconds = n.GetIntValue(); } },
                { "started_at", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "total_seconds", n => { TotalSeconds = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("expiration", Expiration);
            writer.WriteEnumValue<global::ArtifactsMmoDotNet.Api.Generated.Models.ActionType>("reason", Reason);
            writer.WriteIntValue("remaining_seconds", RemainingSeconds);
            writer.WriteDateTimeOffsetValue("started_at", StartedAt);
            writer.WriteIntValue("total_seconds", TotalSeconds);
        }
    }
}
#pragma warning restore CS0618
