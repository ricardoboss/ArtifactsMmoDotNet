// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace ArtifactsMmoDotNet.Api.Generated.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class MapSchema : IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Content of the map.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema? Content
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema?>("content"); }
            set { BackingStore?.Set("content", value); }
        }
#nullable restore
#else
        public global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema Content
        {
            get { return BackingStore?.Get<global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema>("content"); }
            set { BackingStore?.Set("content", value); }
        }
#endif
        /// <summary>Name of the map.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>Skin of the map.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Skin
        {
            get { return BackingStore?.Get<string?>("skin"); }
            set { BackingStore?.Set("skin", value); }
        }
#nullable restore
#else
        public string Skin
        {
            get { return BackingStore?.Get<string>("skin"); }
            set { BackingStore?.Set("skin", value); }
        }
#endif
        /// <summary>Position X of the map.</summary>
        public int? X
        {
            get { return BackingStore?.Get<int?>("x"); }
            set { BackingStore?.Set("x", value); }
        }
        /// <summary>Position Y of the map.</summary>
        public int? Y
        {
            get { return BackingStore?.Get<int?>("y"); }
            set { BackingStore?.Set("y", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.MapSchema"/> and sets the default values.
        /// </summary>
        public MapSchema()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ArtifactsMmoDotNet.Api.Generated.Models.MapSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ArtifactsMmoDotNet.Api.Generated.Models.MapSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ArtifactsMmoDotNet.Api.Generated.Models.MapSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "content", n => { Content = n.GetObjectValue<global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema>(global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema.CreateFromDiscriminatorValue); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "skin", n => { Skin = n.GetStringValue(); } },
                { "x", n => { X = n.GetIntValue(); } },
                { "y", n => { Y = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ArtifactsMmoDotNet.Api.Generated.Models.MapContentSchema>("content", Content);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("skin", Skin);
            writer.WriteIntValue("x", X);
            writer.WriteIntValue("y", Y);
        }
    }
}
#pragma warning restore CS0618
